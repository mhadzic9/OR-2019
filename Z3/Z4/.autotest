{
    "id": 5654,
    "name": "Osnove ra\u010dunarstva (2019\/2020), Zada\u0107a 3, Zadatak 4",
    "language": "C",
    "preferred_compiler": "gcc",
    "required_compiler": "gcc",
    "compiler_features": [],
    "compiler_options": "-O1 -Wall -Wuninitialized -Winit-self -Wno-unused-result -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 1,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/* AT1: Nema ponavljanja u matrici *\/\n\ndouble A[100][100] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} };\ndouble B[100][100] = { {4, 1, 9}, {7, 8, 3}, {6, 2, 5} };\ndouble C[100][100] = { {8, 4, 6}, {5, 2, 1}, {7, 9, 3} };\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 3) );\n\n\/* Dodajemo ponavljanje *\/\nC[2][2] = 1;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 3) );\n\n\/* Sada je opet ok jer smo samo zamijenili dva elementa *\/\nC[1][2] = 3;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 3) );\n\n\/* Dodajemo element kojeg nema u polaznoj matrici *\/\nB[2][2] = 10;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 3) );\n\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 0 1 0 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/* AT2: Matrice sa ponavljanjem *\/\n\ndouble A[100][100] = { {0.1, 0.1, 0.1, 0.1, 0.1}, {0.2, 0.2, 0.2, 0.2, 0.2}, {1,1,1,1,1} };\ndouble B[100][100] = { {0.1, 0.2, 1, 0.1, 0.2}, {1, 0.1, 0.2, 1, 0.1}, {0.2, 1, 0.1, 0.2, 1} };\ndouble C[100][100] = { {0.2, 0.1, 0.2, 0.1, 0.2}, {0.1, 1, 0.1, 1, 0.1}, {1, 0.2, 1, 0.2, 0.1}  };\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 5) );\n\n\/* Popravljamo gresku u posljednjem elementu *\/\nC[2][4] = 1;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 5) );\n\nC[2][4] = 0.2;\nB[2][4] = 0.2;\nA[2][4] = 0.2;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 5) );\n\n\/* Novi element *\/\nC[1][1] = 3;\nB[1][0] = 3;\nA[2][0] = 3;\nprintf(\"%d \", matrice_permutacija(A, B, C, 3, 3) );\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "0 1 1 1 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 3,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/* AT3: Funkcije ne trebaju mijenjati matrice ako se to nije trazilo zadatkom *\/\n\ndouble A[100][100] = { {1, 2, 3} };\ndouble B[100][100] = { {3, 2, 1} };\ndouble C[100][100] = { {3, 1, 2} };\nprintf(\"%d\\n\", matrice_permutacija(A, B, C, 1, 3) );\n\nint i;\nfor (i=0; i<3; i++)\n   printf(\"%g \", A[0][i]);\nprintf(\"\\n\");\nfor (i=0; i<3; i++)\n   printf(\"%g \", B[0][i]);\nprintf(\"\\n\");\nfor (i=0; i<3; i++)\n   printf(\"%g \", C[0][i]);\nprintf(\"\\n\");\n\ndouble E[100][100] = { {1}, {2}, {3} };\ndouble F[100][100] = { {1}, {3}, {2} };\ndouble G[100][100] = { {3}, {1}, {2} };\nprintf(\"%d\\n\", matrice_permutacija(E, F, G, 3, 1) );\n\nfor (i=0; i<3; i++)\n   printf(\"%g \", E[i][0]);\nprintf(\"\\n\");\nfor (i=0; i<3; i++)\n   printf(\"%g \", F[i][0]);\nprintf(\"\\n\");\nfor (i=0; i<3; i++)\n   printf(\"%g \", G[i][0]);\nprintf(\"\\n\");\n\nG[2][0] = 3;\nprintf(\"%d\\n\", matrice_permutacija(E, F, G, 3, 1) );\n",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1\\n1 2 3 \\n3 2 1 \\n3 1 2 \\n1\\n1 2 3\\n1 3 2\\n3 1 2\\n0"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 4,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/* AT4: Velike matrice *\/\n\ndouble A[100][100], B[100][100], C[100][100];\nint i, j;\nfor (i=0; i<100; i++)\n   for (j=0; j<100; j++)\n       A[i][j] = B[i][j] = C[i][j] = 3.1415;\n\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\n\/* Na random mjesta stavljamo broj 15 *\/\nsrand(time(NULL));\nA[rand()%100][rand()%100] = 15;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nB[rand()%100][rand()%100] = 15;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nC[rand()%100][rand()%100] = 15;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nA[rand()%100][rand()%100] = 15;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n",
            "global_above_main": "",
            "global_top": "#include <stdlib.h>\n#include <time.h>",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 0 0 1 0 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 5,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/* AT5: Velike matrice bez ponavljanja *\/\n\ndouble A[100][100], B[100][100], C[100][100];\nint i, j;\nfor (i=0; i<100; i++)\n   for (j=0; j<100; j++) {\n       A[i][j] = i*100+j;\n       B[j][i] = i*100+j;\n       C[i][j] = 99-j+100*i;\n   }\n\n\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\n\/* Broj 115 zamjenjujemo brojem 32 *\/\nA[1][15] = 32;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nB[15][1] = 32;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nC[1][84] = 32;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );\n\nA[0][15] = 32;\nprintf(\"%d \", matrice_permutacija(A, B, C, 100, 100) );",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "1 0 0 1 0 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}